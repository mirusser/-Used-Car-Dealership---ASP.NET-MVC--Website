@using TypicalMirek_UsedCarDealer.Models
@using TypicalMirek_UsedCarDealer.Models.Enums

@model ParametersToAdminMenu
@{
    SidebarChoose? choise = (dynamic)Model.Chose;
}

@using (Html.BeginForm())
{
    <div>
        <div margin="0 auto" class="col-md-1">
            <div class="form-group">
                @{
                    Html.RenderPartial($"PartialViews/_Sidebar");
                }
            </div>
        </div>
        <div class="col-md-1">

        </div>

        <div>
            @{
                switch (choise)
                {
                    case SidebarChoose.Nothing:
                        {
                            break;
                        }
                    case SidebarChoose.CarList:
                        {
                            @Html.Action("List", "CarManagement")
                            break;
                        }
                    case SidebarChoose.CreateCar:
                        {
                            @Html.Action("Create", "CarManagement")
                            break;
                        }
                    case SidebarChoose.DetailsCar:
                        {
                            @Html.Action("Details", "CarManagement", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.EditCar:
                        {
                            @Html.Action("Edit", "CarManagement", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.DeleteCar:
                        {
                            @Html.Action("Delete", "CarManagement", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.BodiesList:
                        {
                            @Html.Action("List", "CarBodies")
                            break;
                        }
                    case SidebarChoose.CreateBodies:
                        {
                            @Html.Action("Create", "CarBodies")
                            break;
                        }
                    case SidebarChoose.DetailsBodies:
                        {
                            @Html.Action("Details", "CarBodies", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.EditBodies:
                        {
                            @Html.Action("Edit", "CarBodies", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.DeleteBodies:
                        {
                            @Html.Action("Delete", "CarBodies", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.BrandList:
                        {
                            @Html.Action("List", "Brands")
                            break;
                        }
                    case SidebarChoose.CreateBrand:
                        {
                            @Html.Action("Create", "Brands")
                            break;
                        }
                    case SidebarChoose.DetailsBrand:
                        {
                            @Html.Action("Details", "Brands", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.EditBrand:
                        {
                            @Html.Action("Edit", "Brands", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.DeleteBrand:
                        {
                            @Html.Action("Delete", "Brands", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.CharacterList:
                        {
                            @Html.Action("List", "Characters")
                            break;
                        }
                    case SidebarChoose.CreateCharacter:
                        {
                            @Html.Action("Create", "Characters")
                            break;
                        }
                    case SidebarChoose.DetailsCharacter:
                        {
                            @Html.Action("Details", "Characters", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.EditCharacter:
                        {
                            @Html.Action("Edit", "Characters", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.DeleteCharacter:
                        {
                            @Html.Action("Delete", "Characters", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.TypeList:
                        {
                            @Html.Action("List", "Types")
                            break;
                        }
                    case SidebarChoose.CreateType:
                        {
                            @Html.Action("Create", "Types")
                            break;
                        }
                    case SidebarChoose.DetailsType:
                        {
                            @Html.Action("Details", "Types", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.EditType:
                        {
                            @Html.Action("Edit", "Types", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.DeleteType:
                        {
                            @Html.Action("Delete", "Types", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.CategoryList:
                        {
                            @Html.Action("List", "Categories")
                            break;
                        }
                    case SidebarChoose.CreateCategory:
                        {
                            @Html.Action("Create", "Categories")
                            break;
                        }
                    case SidebarChoose.DetailsCategory:
                        {
                            @Html.Action("Details", "Categories", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.EditCategory:
                        {
                            @Html.Action("Edit", "Categories", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.DeleteCategory:
                        {
                            @Html.Action("Delete", "Categories", routeValues: new { id = Model.Id })
                            break;
                        }
                    case SidebarChoose.ChangeUserRole:
                        {
                            @Html.Action("ChangeUserRole", "Account")
                            break;
                        }
                    case SidebarChoose.ChangeUserRolePost:
                        {
                            @Html.Action("ChangeUserRole", "Account", routeValues: new { result = Model.ChangeUserRoleViewModel })
                            break;
                        }
                }
            }
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
