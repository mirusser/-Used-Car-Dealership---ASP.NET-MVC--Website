@model TypicalMirek_UsedCarDealer.Models.MarkersConfiguration

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row form-horizontal">
            <h4>MarkersConfiguration</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-horizontal col-md-12">
                <div class="form-group col-md-12">
                    @{ Html.EnableClientValidation(false); }
                    @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control", @placeholder = nameof(Model.Latitude) } })
                    @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                    @{ Html.EnableClientValidation(true); }
                </div>
            </div>

            <div class="form-horizontal col-md-12">
                <div class="form-group col-md-12">
                    @{ Html.EnableClientValidation(false); }
                    @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control", @placeholder = nameof(Model.Longitude) } })
                    @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                    @{ Html.EnableClientValidation(true); }
                </div>
            </div>

            <div class="form-horizontal col-md-12">
                <div class="form-group col-md-12">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = nameof(Model.Title) } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-horizontal col-md-12">
                <div class="form-group col-md-12">
                    @Html.EditorFor(model => model.Info, new { htmlAttributes = new { @class = "form-control", @placeholder = nameof(Model.Info) } })
                    @Html.ValidationMessageFor(model => model.Info, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-actions no-color">
                <div class="form-horizontal col-md-12">
                    <div class="form-group col-md-12">
                        <div>
                            <input type="submit" value="Create" class="btn btn-primary col-md-12 col-xs-12" />
                        </div>
                    </div>
                </div>
                <div class="form-horizontal col-md-12">
                    <div class="form-group col-md-12">
                        <div>
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default col-md-12 col-xs-12" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
                        }


</body>
</html>
